{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\spva\\\\myws\\\\react\\\\23-onwards-to-a-bigger-project\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails(props) {\n  const meetupdata = {};\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    title: props.meetupData.title,\n    image: props.meetupData.image,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n\nexport async function getStaticPaths(context) {\n  const client = await MongoClient.connect(\"mongodb+srv://emailtosandp:EasyPass0312%40.@mymongo.tg4fxzb.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollections = db.collection(\"meetups\");\n  const meetups = await meetupsCollections.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId; // fetch data from API\n\n  console.log(\"meetupId\", meetupId);\n  const client = await MongoClient.connect(\"mongodb+srv://emailtosandp:EasyPass0312%40.@mymongo.tg4fxzb.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollections = db.collection(\"meetups\");\n  const selectedMeetup = await meetupsCollections.findOne({\n    _id: ObjectId(meetupId)\n  });\n  console.log(selectedMeetup);\n  client.close();\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetup._id.toString(),\n        title: selectedMeetup.title,\n        image: selectedMeetup.image,\n        address: selectedMeetup.address,\n        description: selectedMeetup.description\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["C:/Users/spva/myws/react/23-onwards-to-a-bigger-project/pages/[meetupId]/index.js"],"names":["MongoClient","ObjectId","MeetupDetail","MeetupDetails","props","meetupdata","meetupData","title","image","address","description","getStaticPaths","context","client","connect","db","meetupsCollections","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","console","log","selectedMeetup","findOne","id"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,QAAMC,UAAU,GAAG,EAAnB;AACA,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAED,KAAK,CAACE,UAAN,CAAiBC,KAD1B;AAEE,IAAA,KAAK,EAAEH,KAAK,CAACE,UAAN,CAAiBE,KAF1B;AAGE,IAAA,OAAO,EAAEJ,KAAK,CAACE,UAAN,CAAiBG,OAH5B;AAIE,IAAA,WAAW,EAAEL,KAAK,CAACE,UAAN,CAAiBI;AAJhC;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;AACD,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAMC,MAAM,GAAG,MAAMb,WAAW,CAACc,OAAZ,CACnB,6GADmB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,kBAAkB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA3B;AAEA,QAAMC,OAAO,GAAG,MAAMF,kBAAkB,CAACG,IAAnB,CAAwB,EAAxB,EAA4B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA5B,EAAwCC,OAAxC,EAAtB;AACAR,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAaC,MAAD,KAAa;AAC9BC,MAAAA,MAAM,EAAE;AACNC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AADJ;AADsB,KAAb,CAAZ;AAFF,GAAP;AAQD;AACD,OAAO,eAAeC,cAAf,CAA8BlB,OAA9B,EAAuC;AAC5C,QAAMgB,QAAQ,GAAGhB,OAAO,CAACe,MAAR,CAAeC,QAAhC,CAD4C,CAE5C;;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBJ,QAAxB;AACA,QAAMf,MAAM,GAAG,MAAMb,WAAW,CAACc,OAAZ,CACnB,6GADmB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,kBAAkB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA3B;AAEA,QAAMgB,cAAc,GAAG,MAAMjB,kBAAkB,CAC5CkB,OAD0B,CAClB;AAAEd,IAAAA,GAAG,EAAEnB,QAAQ,CAAC2B,QAAD;AAAf,GADkB,CAA7B;AAGEG,EAAAA,OAAO,CAACC,GAAR,CAAYC,cAAZ;AAEApB,EAAAA,MAAM,CAACS,KAAP;AAEF,SAAO;AACLlB,IAAAA,KAAK,EAAE;AACLE,MAAAA,UAAU,EAAE;AACV6B,QAAAA,EAAE,EAAEF,cAAc,CAACb,GAAf,CAAmBS,QAAnB,EADM;AAEVtB,QAAAA,KAAK,EAAE0B,cAAc,CAAC1B,KAFZ;AAGVC,QAAAA,KAAK,EAAEyB,cAAc,CAACzB,KAHZ;AAIVC,QAAAA,OAAO,EAAEwB,cAAc,CAACxB,OAJd;AAKVC,QAAAA,WAAW,EAAEuB,cAAc,CAACvB;AALlB;AADP;AADF,GAAP;AAWD;AAED,eAAeP,aAAf","sourcesContent":["import { MongoClient, ObjectId } from \"mongodb\";\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\n\r\nfunction MeetupDetails(props) {\r\n  const meetupdata = {};\r\n  return (\r\n    <MeetupDetail\r\n      title={props.meetupData.title}\r\n      image={props.meetupData.image}\r\n      address={props.meetupData.address}\r\n      description={props.meetupData.description}\r\n    />\r\n  );\r\n}\r\nexport async function getStaticPaths(context) {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://emailtosandp:EasyPass0312%40.@mymongo.tg4fxzb.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n\r\n  const db = client.db();\r\n  const meetupsCollections = db.collection(\"meetups\");\r\n\r\n  const meetups = await meetupsCollections.find({}, { _id: 1 }).toArray();\r\n  client.close();\r\n\r\n  return {\r\n    fallback: false,\r\n    paths: meetups.map((meetup) => ({\r\n      params: {\r\n        meetupId: meetup._id.toString(),\r\n      },\r\n    })),\r\n  };\r\n}\r\nexport async function getStaticProps(context) {\r\n  const meetupId = context.params.meetupId;\r\n  // fetch data from API\r\n  console.log(\"meetupId\", meetupId);\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://emailtosandp:EasyPass0312%40.@mymongo.tg4fxzb.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n\r\n  const db = client.db();\r\n  const meetupsCollections = db.collection(\"meetups\");\r\n\r\n  const selectedMeetup = await meetupsCollections\r\n    .findOne({ _id: ObjectId(meetupId) });\r\n    \r\n    console.log(selectedMeetup);\r\n  \r\n    client.close();\r\n\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        id: selectedMeetup._id.toString(),\r\n        title: selectedMeetup.title,\r\n        image: selectedMeetup.image,\r\n        address: selectedMeetup.address,\r\n        description: selectedMeetup.description,\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}